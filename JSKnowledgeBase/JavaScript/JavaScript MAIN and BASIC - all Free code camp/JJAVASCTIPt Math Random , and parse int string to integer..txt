Generate Random Fractions with JavaScript
Random numbers are useful for creating random behavior.

JavaScript has a Math.random() function that generates a random 
decimal number between 0 (inclusive) and 1 (exclusive). Thus Math.random() 
can return a 0 but never return a 1.

Note: Like Storing Values with the Assignment Operator, all function 
calls will be resolved before the return executes, so we can return the
 value of the Math.random() function.

=======================

function to return a random number 1 - 100 - 

function randomFraction() {

  // Only change code below thisline
 let x = Math.random() * 100 
  return x;

  // Only change code above this line
}
console.log(randomFraction())

// random # , 1 - 100. 
======================================================


--IMPORTANT --- 

console.log(Math.random() * 200 )                     // logs out a number between 1 - 200


console.log(Math.floor(Math.random() * 200 ))        // logs out a WHOLE  number between 1 - 200
console.log(Math.floor(Math.random() * 2700 ))        // logs out a WHOLE  number between 1 - 2700
console.log(Math.floor(Math.random() * 70 ))        // logs out a WHOLE  number between 1 - 70  ... etc. etc. 
====================================================================================================================
 a Function uding math random and math floor for a whole random number. 

function randomWholeNum() {

  // Only change code below this line

  return Math.floor(Math.random() * 9 );

}
console.log(randomWholeNum());					// logs a random number one through nine  
==================================================================================================
==================================================================================================
======================================================================

Example using a function to generate a 
MINIMUM , and a
MAXIMUM , RANDOM vALUE 

// Example
function ourRandomRange(ourMin, ourMax) {

  return Math.floor(Math.random() * (ourMax - ourMin + 1)) + ourMin;
}

ourRandomRange(1, 9);

// Only change code below this line.

function randomRange(myMin, myMax) {

  return Math.floor(Math.random() * (myMax - myMin + 1)) + myMin;

}

var myRandom = randomRange(5, 15);
console.log(myRandom);

==================================================
=================================
==========================
===================
=======
===     parseInt("12000")     // --  TAKES IN A STRING OF NUMBERS AND CONVERTS THEM INTO INTEGER REAL NUMBER VALUES. 
 
Example , this logs out 122 to the string. 

function convertToInteger(str) {
return parseInt(str)
}
convertToInteger("56");

console.log(convertToInteger("122"))       // logs out the number 122


============================================================
==============================================================
==============================================
--IMPORTANT -_-_--- the RADIX parameter in the parseInt() function. 

Use the parseInt Function with a Radix
The parseInt() function parses a string and returns an integer.
 It takes a second argument for the radix, which specifies the base of
 the number in the string. The radix can be an integer between 2 and 36.

The function call looks like:

function convertToInteger(str) {
  return parseInt(str, 2)
}
convertToInteger("10011");
console.log(convertToInteger(10011))

====================================================================

----- Value Comparison ------ using booleal values to determine the outcome of 
the equation , through a function call.  

function checkEqual(a, b) {

if( a > b) { 
  return "a is greater."
}else{
  return "b is greater or equal"
}
}
console.log(checkEqual(1, 2)); 

// this will say  "b is greater or equal". 
============================================================









=
























